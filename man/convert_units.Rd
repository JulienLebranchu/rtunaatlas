% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_units.R
\name{convert_units}
\alias{convert_units}
\title{Convert units of measure in a fact dataset}
\usage{
convert_units(df_input, df_conversion_factor, codelist_geoidentifiers_conversion_factors)
}
\arguments{
\item{df_input}{a data.frame of fact}

\item{df_conversion_factor}{a data.frame of factors of conversion between units}

\item{codelist_geoidentifiers_conversion_factors}{NULL or string. The name of the coding system for the spatial dimension used in df_conversion_factor, or NULL if the coding system for the spatial dimension is the same as the one used in df_input}
}
\description{
This function converts the units of measure in a fact dataset using a dataset of factors of conversions between units. The data frames of fact and of factors of conversions must be properly structured. For structures of data frames, see details and here: \url{http://}.
}
\details{
The data frame of factors of conversion between units (df_conversion_factor) must have the following structure:
- several columns of dimension, that stratify the factor of conversion (e.g. species, gear, etc.),
- one column named 'unit', that provides the code of the source unit of the conversion factor,
- one column named 'unit_target', that provides the code of the target unit of the conversion factor,
- one column named 'conversion_factor', that provides the numerical factor of conversion to convert the measure from the unit stated in the column 'unit' to the unit stated in the column 'unit_target'.
See an example of dataset of factors of conversion here: \url{https://goo.gl/KriwxV}.

Example: These are the first rows of a dataset of factors of conversions:

 \tabular{rrrrr}{
 source_authority   \tab species \tab    gear \tab  geographic_identifier \tab  time_start  \tab  time_end    \tab   unit \tab    unit_target  \tab   conversion_factor\cr
 IOTC  \tab          \tab    YFT  \tab      LL \tab    1      \tab                 1952-01-01 \tab   1953-01-01 \tab    NO   \tab    MT    \tab          0.048060001\cr
 IOTC  \tab          \tab    YFT   \tab     LL \tab    2       \tab                1952-01-01  \tab  1953-01-01   \tab  NO   \tab    MT    \tab          0.048680000\cr
 IOTC  \tab          \tab    YFT   \tab     LL \tab    3       \tab                1952-01-01  \tab  1953-01-01  \tab   NO   \tab    MT     \tab         0.058639999\cr
 IOTC  \tab          \tab    BET   \tab     LL \tab    0       \tab                1952-01-01  \tab  1953-01-01  \tab   NO   \tab    MT     \tab         0.044340000
 }
 
 The first row means that for the combination of dimensions: { source_authority=IOTC, species=YFT, gear=LL, geographical_identifier=1, starting date of validity of the factor of conversion (time_start)=1952-01-01, ending date of validity of the factor of conversion (time_start)=1953-01-01}, the factor of conversion to convert a measure from unit=NO to target_unit=MT is equal to 0.048060001 
 
 The codes used in the dimensions of the dataset of factors of conversion (df_conversion_factor) must be the same as the ones used in the dataset of fact with units to convert (df_input), except for the spatial dimension (geographic_identifier) - see here-after for more details.
 The only mandatory columns of the dataset of factors of conversion are "unit", "unit_target" and "conversion_factor". All the other columns are here to stratify the factors of conversion (by species, gear, time, space, etc.).
 Particularly, the columns "time_start", "time_end" and "geographic_identifier" allow to stratify spatialy and temporarily the factors of conversion. 
 The columns "time_start" and "time_end" provide respectively the starting date and the ending date of validity of the factor of conversion. 
 The column "geographic_identifier" provides the spatial stratification of the factor of conversion. If the coding system for spatial stratification used in df_conversion_factor is the same as the one used in df_input, then the parameter codelist_geoidentifiers_conversion_factors must be set to NULL. Else, the spatial coding system used in df_conversion_factor must be stored in the Sardara database, and the parameter codelist_geoidentifiers_conversion_factors must be set to the name of the spatial coding system (table) in Sardara DB.
 If df_conversion_factor mixes factors of conversion that have and do not have a spatial stratification, the rows that do not have spatial stratification must be set to geographic_identifier= 0.
}
\examples{

# Connect to Sardara World DB
con=db_connection_sardara_world()

# Retrieve IOTC georeferenced catch data from 2017
df_input<-iotc_catch_level0(2017)

# Open a dataset of factors of conversion (the one used to convert units of catch in the IRD Tuna Atlas)
conversion_factors_dataset="https://goo.gl/KriwxV"
df_conversion_factor=read.csv(conversion_factors_dataset,stringsAsFactors = F,colClasses="character")
head(df_conversion_factor)

# Map gears of input dataset with standard gears, and then with sardara groups of gears, to align with codes of gears used in the conversion factor dataset
gear_rfmos_mapping_to_standard<-extract_dataset(con,list_metadata_datasets(con,dataset_name="codelist_mapping_gear_iotc_isscfg_revision_1")) 
df_mapped<-map_codelist(df_input,gear_rfmos_mapping_to_standard,"gear")$df
gear_standard_mapping_to_gear_sardara<-extract_dataset(con,list_metadata_datasets(con,dataset_name="codelist_mapping_gear_iotc_geargroup_tunaatlas")) 
df_input<-map_codelist(df_input,gear_standard_mapping_to_gear_sardara,"gear")$df

# Convert units MTNO to MT and remove NOMT (we do not keep the data that were expressed in number with corresponding value in weight)
df_input$unit[which(df_input$unit == "MTNO")]<-"MT"
df_input<-df_input[!(df_input$unit=="NOMT"),]

# Convert units from numbers to weight using the dataset of factors of conversion. 
# The spatial coding system used in conversion_factor (column geographic_identifier) is not the same as the one used in df_input. Hence, we set in the parameter codelist_geoidentifiers_conversion_factors the name of the spatial coding system used in df_conversion factor ("areas_conversion_factors_numtoweigth_ird").
df_converted<-convert_units(df_input = df_input, df_conversion_factor = df_conversion_factor, codelist_geoidentifiers_conversion_factors = "areas_conversion_factors_numtoweigth_ird")

# Get the dataframe with units converted: data that were expressed in number are converted to metric tons. Some data might not be converted at all because no conversion factor exists for the stratum: these data are kept in their original unit (in this case, number).
df_converted_df<-list_df_converted$df
head(df_converted_df)

# Get information regarding the conversion (data converted, data not converted because no factor of conversion existed, etc.)
df_converted$stats

}
\seealso{
Other create your own tuna atlas: \code{\link{map_codelist}},
  \code{\link{raise_datasets_by_dimension}}
}
\author{
Paul Taconet, \email{paul.taconet@ird.fr}
}
