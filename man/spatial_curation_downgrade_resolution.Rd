% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_curation_downgrade_resolution.R
\name{spatial_curation_downgrade_resolution}
\alias{spatial_curation_downgrade_resolution}
\title{Disaggregate gridded data}
\usage{
spatial_curation_downgrade_resolution(con, df_input, resolution,
  remove = FALSE)
}
\arguments{
\item{con}{a wrapper of rpostgresql connection (connection to a database)}

\item{df_input}{data.frame of fact. The data frame must contain at least one column "geographical_identifier" with CWP grid codification or IOTC irregular areas from catch-and-effort datasets.}

\item{resolution}{integer. Resolution to reach (in degrees). Currently, works with 1 and 5.}

\item{remove}{boolean. Remove from the dataset data that are defined on resolutions superior to \code{resolution}? Default is FALSE}
}
\value{
a list with 2 objects: 
 \itemize{
 \item{"df": }{\code{df_input} where data have been disaggregated}
 \item{"stats": }{A data.frame with some information regarding the process}
 }
}
\description{
This function disaggregates or remove the data of a df_input on a grid with resolution equal to \code{resolution}. Data with resolutions superior to \code{resolution} will be disaggregated on the corresponding \code{resolution} quadrant by dividing the catch equally on the overlappings \code{resolution} quadrants, or removed. Data with resolutions inferior to \code{resolution} will not be aggregated. To aggregate data with resolutions inferior to \code{resolution}, use the function \code{spatial_curation_upgrade_resolution}
}
\examples{


# Extract a df_input from Sardara World database
con=db_connection_sardara_world()
dataset_metadata<-list_metadata_datasets(con,dataset_name="atlantic_ocean_catch_1950_01_01_2016_01_01_tunaatlasICCAT_2017_level0__noSchool")
df<-extract_dataset(con,dataset_metadata)

# Disaggregate data with resolutions superior to 5° on the corresponding 5° resolution grid, by dividing the catch equally on the overlappings \\code{resolution} quadrants:
df_disaggregated_5_deg<-spatial_curation_downgrade_resolution(con,df_input=df,resolution=5)

head(df_disaggregated_5_deg$df)

# Some stats (percentage of the data that have been disaggregated)
df_disaggregated_5_deg$stats

# In this df_input, data that were defined on a grid superior to 5° were disaggregated on the corresponding 5° resolution, other data remained at their source resolution (e.g. data at 1° resolution will not be aggregated on the corresponding 5° grid)
# if you want the data inferior to 5° to be aggregated on the 5° grid, use : 
# spatial_curation_downgrade_resolution(con,df_input=df_disaggregated_5_deg,resolution=5)

}
\seealso{
Other process data: \code{\link{convert_units}},
  \code{\link{get_rfmos_datasets_level0}},
  \code{\link{map_codelist}},
  \code{\link{raise_datasets_by_dimension}},
  \code{\link{raise_get_rf}},
  \code{\link{raise_incomplete_dataset_to_total_dataset}},
  \code{\link{spatial_curation_intersect_areas}},
  \code{\link{spatial_curation_reallocate_data}},
  \code{\link{spatial_curation_upgrade_resolution}}
}
\author{
Paul Taconet, IRD \email{paul.taconet@ird.fr}
}
